{"version":3,"sources":["index.js"],"names":["countriesList","countriesName","Countries","slice","sort","barPadding","margin","top","right","bottom","left","w","h","y","d3","scaleBand","range","padding","x","scaleLinear","dataset","barDataset","songNames","init","console","log","csv","then","data","slider","initSlider","filtered","filter","d","getDate","initGraph","updateGraph","countryDropdown","select","insert","on","country","property","index","indexOf","fileName","document","getElementById","style","visibility","src","selectAll","enter","append","attr","text","toUpperCase","length","svg","updateSVG","fullSongNames","artistNames","remove","call","axisBottom","axisLeft","tickSize","tickFormat","i","parseInt","streams","updateBars","bars","merge","bandwidth","arrayObj","Streams","name","substring","domain","max","sliderTime","date","playSlider","timeFormat","value","weeks2019","map","Date","months","sliderBottom","min","step","width","tickValues","displayValue","val","gTime"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["\n// globals\nvar countriesList = [\"ca\", \"dk\", \"gr\", \"is\", \"mx\", \"ph\", \"sv\",\n    \"ar\", \"ch\", \"do\", \"gt\", \"it\", \"my\", \"pl\", \"th\",\n    \"at\", \"cl\", \"ec\", \"hk\", \"jp\", \"pt\", \"tr\",\n    \"au\", \"co\", \"hn\", \"nl\", \"py\", \"tw\",\n    \"be\", \"cr\", \"es\", \"hu\", \"no\", \"ro\", \"us\",\n    \"fi\", \"id\", \"nz\", \"se\", \"uy\",\n    \"bo\", \"cz\", \"fr\", \"ie\", \"pa\", \"sg\", \"vn\",\n    \"br\", \"de\", \"gb\", \"il\", \"pe\", \"sk\", \"global\"];\n\nvar countriesName = [\"Canada\", \"Denmark\", \"Greece\", \"Iceland\", \"Mexico\", \"Philippines\", \"El Salvador\",\n    \"Argentina\", \"Switzerland\", \"Dominican Republic\", \"Guatemala\", \"Italy\", \"Malaysia\", \"Poland\", \"Thailand\",\n    \"Austria\", \"Chile\", \"Ecuador\", \"Hong Kong\", \"Japan\", \"Portugal\", \"Turkey\",\n    \"Australia\", \"Columbia\", \"Honduras\", \"Netherlands\", \"Paraguay\", \"Taiwan\",\n    \"Belgium\", \"Costa Rica\", \"Spain\", \"Hungary\", \"Norway\", \"Romania\", \"United States\",\n    \"Finland\", \"Indonesia\", \"New Zealand\", \"Sweden\", \"Uruguay\",\n    \"Bolivia\", \"Czech Republic\", \"France\", \"Ireland\", \"Panama\", \"Singapore\", \"Vietnam\",\n    \"Brazil\", \"Germany\", \"United Kingdom\", \"Israel\", \"Peru\", \"Slovakia\", \"global\"];\nvar Countries = (countriesName).slice(0).sort();\n\nvar barPadding = 1;\nvar margin = {\n    top: 15,\n    right: 25,\n    bottom: 30,\n    left: 10\n};\nvar w = 800 - margin.left - margin.right;\nvar h = 460 - margin.top - margin.bottom;\n\n//set x and y ranges\nvar y = d3.scaleBand()\n.range([h - 10, 0])\n.padding(0.1);\n\nvar x = d3.scaleLinear()\n.range([0, w]);\n\n\nvar dataset = [];\nvar barDataset;\nvar songNames;\n\n\n//--------------------------------// end globals\n\nfunction init() {\n    // load global data\n    console.log(\"init begin\");\n    d3.csv(\"streamsglobal10.csv\").then(function (data) {\n        console.log(\"load global data begin\");\n        slider.initSlider();\n        \n        dataset = data;\n        var filtered = data.filter(function (d) {\n            return d[\"date\"] === slider.getDate();\n        })\n        \n        initGraph();\n        updateGraph(filtered);\n\n        // update graph based on country dropdown\n        var countryDropdown = d3.select(\"#vis-container-country\")\n            .insert(\"select\", \"svg\")\n            .on(\"change\", function () {\n                var country = d3.select(this).property(\"value\");\n                var index = countriesName.indexOf(country);\n                var fileName = \"streams\" + countriesList[index] + \"10.csv\";\n\n                if(countriesList[index] == \"global\") {\n                    document.getElementById(\"flag\").style.visibility=\"hidden\"; \n                }\n                else {\n                    document.getElementById(\"flag\").src=\"https://cdn.ip2location.com/assets/img/flags/\" + countriesList[index] + \".png\";\n                    document.getElementById(\"flag\").style.visibility=\"visible\"; \n                }\n\n                // load new csv, and update graph\n                d3.csv(fileName).then(function (data) {\n                    dataset = data;\n                    var filtered = data.filter(function (d) {\n                        return d[\"date\"] === slider.getDate();\n                    })\n                    updateGraph(filtered);\n                });\n            });\n\n        // populate the country dropdown\n        countryDropdown.selectAll(\"option\")\n            .data(Countries)\n            .enter().append(\"option\")\n            .attr(\"value\", function (d) { return d; })\n            .attr(\"selected\", function (d) {\n                return d === \"Global\";\n            })\n            .text(function (d) {\n                return d[0].toUpperCase() + d.slice(1, d.length); // capitalize 1st letter\n            });\n        console.log(\"load global data end\");\n    });\n    console.log(\"init end\")\n}\n\nfunction initGraph() {\n    svg = d3.select(\"div#graph\")\n        .append(\"svg\")\n        .attr(\"width\", w + margin.left + margin.right)\n        .attr(\"height\", h + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n}\n\nfunction updateSVG(fullSongNames, barDataset, artistNames, songNames) {\n    svg.selectAll(\"text\").remove();\n\n    // update and add the x Axis\n    svg.selectAll(\"g\").remove();\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + (h - 10) + \")\")\n        .attr(\"color\", \"white\")\n        .call(d3.axisBottom(x));\n\n    // add axis label\n    svg.append(\"text\")\n        .attr(\"transform\",\n            \"translate(\" + (w / 2) + \" ,\" +\n            (h + margin.top + 10) + \")\")\n        .attr(\"fill\", \"white\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", \"12px\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Streams\");\n\n    // add the y Axis\n    svg.append(\"g\")\n        .call(d3.axisLeft(y).tickSize(0).tickFormat(\"\"));\n\n    svg.selectAll(\"title\").remove();\n    svg.selectAll(\"rect\")\n        .append(\"title\")\n        .text(function (d) {\n            var i = 10 - parseInt(d[1]);\n            return \"\\\"\" + fullSongNames[i] + \"\\\" by \" + artistNames[i] + \": \"\n                + d[0] + \" streams on \" + slider.getDate();\n        })\n\n    svg.selectAll(\"text.value\")\n        .data(barDataset)\n        .enter()\n        .append(\"text\")\n        .text(function (d) {\n            return songNames[parseInt(d[1]) - 1];\n        })\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"y\", function (d, i) {\n            return (9 - i) * ((h - 14) / barDataset.length) + 26;\n        })\n        .attr(\"x\", function (d) {\n            var index = d[1];\n            var streams = barDataset[index - 1][0];\n            return x(streams) - 8;\n        })\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"font-weight\", 550)\n        .attr(\"fill\",\"rgb(35, 35, 35)\")\n}\n\nfunction updateBars(barDataset) {\n    var bars = svg.selectAll(\"rect\")\n        .data(barDataset);\n\n    bars.enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"fill\", function () {\n            return \"rgb(30, 215, 96)\";\n        })\n        .merge(bars)\n        .attr(\"x\", function (d) {\n \n            return x(d[1]);\n        })\n        .attr(\"y\", function (d) {\n            console.log(y)\n            console.log(d)\n            return y(d[1]);\n        })\n        .attr(\"width\", function (d) {\n            return x(d[0]);\n        })\n        .attr(\"height\", y.bandwidth());\n}\n\nfunction updateGraph(filtered) {\n    barDataset = [[]];\n    songNames = [\"\"];\n    var fullSongNames = [\"\"];\n    artistNames = [\"\"];\n\n    for (var i = 0; i < filtered.length; i++) {\n        var arrayObj = [parseInt(filtered[i].Streams), (10 - i) + \"\"];\n        var name = filtered[i][\"Track Name\"];\n        fullSongNames[i] = name;\n        if (filtered[i][\"Track Name\"].length > 30) {\n            name = name.substring(0, 31) + \"...\";\n        }\n        songNames[i] = name;\n        artistNames[i] = filtered[i][\"Artist\"];\n        barDataset[i] = arrayObj;\n    }\n\n    // Scale the range of the data in the domains\n    x.domain([0, d3.max(barDataset, function (d) { return d[0]; })])\n    y.domain(d3.range(1, barDataset.length + 1));\n\n    updateBars(barDataset)\n    updateSVG(fullSongNames, barDataset, artistNames, songNames);\n}\n\n\nslider = function () {\n    var sliderTime;\n    var date;\n\n    function playSlider() {\n\n    }\n\n    function getDate() {\n        return d3.timeFormat(\"%Y-%m-%d\")(sliderTime.value());\n    }\n\n    // Code inspired/provided by https://github.com/johnwalley/d3-simple-slider v1.5.4 Copyright 2019 John Walley\n    function initSlider() {\n        var weeks2019 = d3.range(0, 53).map(function (d) {\n            return new Date(2019, 0, 1 + 7 * d);\n        });\n\n        var months = d3.range(0, 12).map(function (d) {\n            return new Date(2019, d, 1);\n        });\n\n        sliderTime = d3\n            .sliderBottom()\n            .min(d3.min(weeks2019))\n            .max(d3.max(weeks2019))\n            .step(12)\n            .width(770 - margin.left - margin.right)\n            .tickValues(months)\n            .tickFormat(d3.timeFormat(\"%b\"))\n            .displayValue(false)\n            .on(\"onchange\", val => {\n                d3.select(\"div#date-display\").text(d3.timeFormat(\"%Y-%m-%d\")(val));\n                date = d3.timeFormat(\"%Y-%m-%d\")(val);\n\n                var filtered = dataset.filter(function (d) {\n                    for (var i = 0; i < dataset.length; i++) {\n                        return d[\"date\"] === date;\n                    }\n                })\n\n                updateGraph(filtered)\n            });\n\n        var gTime = d3\n            .select(\"div#slider\")\n            .append(\"svg\") \n            .attr(\"width\", 900 - margin.left - margin.right)\n            .attr(\"height\", 100 - margin.top - margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(30,10)\");\n\n        gTime.call(sliderTime);\n        gTime.selectAll(\"text\").attr(\"dx\", \"-10px\").attr(\"dy\", \"-16px\");\n\n        // show date at very beginning\n        d3.select(\"div#date-display\").text(d3.timeFormat(\"%Y-%m-%d\")(sliderTime.value()));\n    }\n\n    return {\n        getDate: getDate,\n        initSlider: initSlider\n    }\n\n}();\n\ninit();\n"]}